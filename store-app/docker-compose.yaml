version: '3.8'

services:
  mysqldb:
    image: mysql:latest
    container_name: store-database
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:management
    container_name: message-queue
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_USER}
    ports:
      - "5672:5672"
      - "15672:15672"

  products-api:
    build:
      context: ./products-api
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USERNAME: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
    depends_on:
      mysqldb:
        condition: service_healthy
    ports:
      - "8080:8080"

  notifications-api:
    build:
      context: ./notifications-api
    environment:
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_QUEUE_NAME: ${RABBITMQ_QUEUE_NAME}
    depends_on:
      - rabbitmq
    ports:
      - "5001:5001"

  store-frontend:
    build:
      context: ./store-frontend
    depends_on:
      - products-api
    ports:
      - "3000:3000"

volumes:
  mysql_data:
